services:
  # Frontend React Application
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      target: development
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_GATEWAY_URL=http://localhost:3001/api
      - VITE_API_WEBSOCKET_URL=ws://localhost:3004
    networks:
      - challenge-network
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - api-gateway

  # API Gateway
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/api-gateway/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - RABBIT_MQ_URI=amqp://admin:admin@rabbitmq:5672
      - SECRET_KEY=your-secret-key-here
    depends_on:
      auth-db:
        condition: service_started
      tasks-db:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - challenge-network

  # Auth Service
  auth-service:
    container_name: auth-service
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
      target: development
    ports:
      - "3002:3002"
    volumes:
      - .:/app
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/auth-service/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3002
      - RABBIT_MQ_URI=amqp://admin:admin@rabbitmq:5672
      - POSTGRES_HOST=auth-db
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=auth_db
      - POSTGRES_PORT=5432
      - SECRET_KEY=your-secret-key-here
    depends_on:
      auth-db:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - challenge-network

  # Tasks Service
  tasks-service:
    container_name: tasks-service
    build:
      context: .
      dockerfile: ./apps/tasks-service/Dockerfile
      target: development
    ports:
      - "3003:3003"
    volumes:
      - .:/app
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/tasks-service/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3003
      - RABBIT_MQ_URI=amqp://admin:admin@rabbitmq:5672
      - POSTGRES_HOST=tasks-db
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=tasks_db
      - POSTGRES_PORT=5432
    depends_on:
      tasks-db:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - challenge-network

  # Notifications Service
  notifications-service:
    container_name: notifications-service
    build:
      context: .
      dockerfile: ./apps/notifications-service/Dockerfile
      target: development
    ports:
      - "3004:3004"
    volumes:
      - .:/app
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/notifications-service/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3004
      - RABBIT_MQ_URI=amqp://admin:admin@rabbitmq:5672
    depends_on:
      tasks-db:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - challenge-network

  # Postgres Database
  auth-db:
    image: postgres:17.5-alpine3.21
    container_name: auth_db
    attach: false
    ports:
      - "5432:5432"
    networks:
      - challenge-network
    restart: always
    volumes:
      - postgres_data:/var/lib/auth_postgresql/data
    command: ["postgres", "-c", "listen_addresses=*"]
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: auth_db

  tasks-db:
    image: postgres:17.5-alpine3.21
    container_name: tasks_db
    attach: false
    ports:
      - "5431:5432"
    networks:
      - challenge-network
    restart: always
    volumes:
      - postgres_data:/var/lib/tasks_postgresql/data
    command: ["postgres", "-c", "listen_addresses=*"]
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: tasks_db

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    attach: false
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - challenge-network
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes: ["rabbitmq_data:/var/lib/rabbitmq"]

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  challenge-network:
    driver: bridge
