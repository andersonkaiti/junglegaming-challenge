/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as DashboardTasksIndexRouteImport } from './routes/dashboard/tasks/index'
import { Route as DashboardTasksNewIndexRouteImport } from './routes/dashboard/tasks/new/index'
import { Route as DashboardTasksEditTaskIdRouteImport } from './routes/dashboard/tasks/edit/$taskId'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardTasksIndexRoute = DashboardTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardTasksNewIndexRoute = DashboardTasksNewIndexRouteImport.update({
  id: '/tasks/new/',
  path: '/tasks/new/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardTasksEditTaskIdRoute =
  DashboardTasksEditTaskIdRouteImport.update({
    id: '/tasks/edit/$taskId',
    path: '/tasks/edit/$taskId',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/dashboard/tasks': typeof DashboardTasksIndexRoute
  '/dashboard/tasks/edit/$taskId': typeof DashboardTasksEditTaskIdRoute
  '/dashboard/tasks/new': typeof DashboardTasksNewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/dashboard/tasks': typeof DashboardTasksIndexRoute
  '/dashboard/tasks/edit/$taskId': typeof DashboardTasksEditTaskIdRoute
  '/dashboard/tasks/new': typeof DashboardTasksNewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/dashboard/tasks/': typeof DashboardTasksIndexRoute
  '/dashboard/tasks/edit/$taskId': typeof DashboardTasksEditTaskIdRoute
  '/dashboard/tasks/new/': typeof DashboardTasksNewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/tasks'
    | '/dashboard/tasks/edit/$taskId'
    | '/dashboard/tasks/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/tasks'
    | '/dashboard/tasks/edit/$taskId'
    | '/dashboard/tasks/new'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/tasks/'
    | '/dashboard/tasks/edit/$taskId'
    | '/dashboard/tasks/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/tasks/': {
      id: '/dashboard/tasks/'
      path: '/tasks'
      fullPath: '/dashboard/tasks'
      preLoaderRoute: typeof DashboardTasksIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/tasks/new/': {
      id: '/dashboard/tasks/new/'
      path: '/tasks/new'
      fullPath: '/dashboard/tasks/new'
      preLoaderRoute: typeof DashboardTasksNewIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/tasks/edit/$taskId': {
      id: '/dashboard/tasks/edit/$taskId'
      path: '/tasks/edit/$taskId'
      fullPath: '/dashboard/tasks/edit/$taskId'
      preLoaderRoute: typeof DashboardTasksEditTaskIdRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardTasksIndexRoute: typeof DashboardTasksIndexRoute
  DashboardTasksEditTaskIdRoute: typeof DashboardTasksEditTaskIdRoute
  DashboardTasksNewIndexRoute: typeof DashboardTasksNewIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardTasksIndexRoute: DashboardTasksIndexRoute,
  DashboardTasksEditTaskIdRoute: DashboardTasksEditTaskIdRoute,
  DashboardTasksNewIndexRoute: DashboardTasksNewIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
